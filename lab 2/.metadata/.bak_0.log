!SESSION 2023-09-07 10:02:36.851 -----------------------------------------------
eclipse.buildId=4.28.0.20230608-1200
java.version=17.0.8
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=uk_UA
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-09-07 10:02:48.173
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-09-07 10:02:48.173
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.mylyn.commons.ui 4 0 2023-09-07 10:02:49.874
!MESSAGE For input string: "or" under radix 16
!STACK 0
java.lang.NumberFormatException: For input string: "or" under radix 16
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at org.eclipse.mylyn.internal.commons.ui.E4ThemeColor.getRGBFromCssString(E4ThemeColor.java:57)
	at org.eclipse.mylyn.commons.ui.GradientColors.getRGBFromTheme(GradientColors.java:211)
	at org.eclipse.mylyn.commons.ui.GradientColors.getBackground(GradientColors.java:190)
	at org.eclipse.mylyn.commons.ui.GradientColors.createBorderColor(GradientColors.java:78)
	at org.eclipse.mylyn.commons.ui.GradientColors.createColors(GradientColors.java:54)
	at org.eclipse.mylyn.commons.ui.GradientColors.<init>(GradientColors.java:50)
	at org.eclipse.mylyn.commons.ui.GradientToolTip.initResources(GradientToolTip.java:49)
	at org.eclipse.mylyn.commons.ui.GradientToolTip.<init>(GradientToolTip.java:44)
	at org.eclipse.mylyn.internal.tasks.ui.views.TaskListToolTip.<init>(TaskListToolTip.java:126)
	at org.eclipse.mylyn.internal.tasks.ui.views.TaskListFilteredTree.createActiveTaskComposite(TaskListFilteredTree.java:423)
	at org.eclipse.mylyn.commons.workbench.AbstractFilteredTree.createFilterControls(AbstractFilteredTree.java:182)
	at org.eclipse.ui.dialogs.FilteredTree.createControl(FilteredTree.java:362)
	at org.eclipse.mylyn.commons.workbench.EnhancedFilteredTree.createControl(EnhancedFilteredTree.java:61)
	at org.eclipse.mylyn.commons.workbench.AbstractFilteredTree.createControl(AbstractFilteredTree.java:92)
	at org.eclipse.ui.dialogs.FilteredTree.init(FilteredTree.java:331)
	at org.eclipse.ui.dialogs.FilteredTree.<init>(FilteredTree.java:289)
	at org.eclipse.mylyn.commons.workbench.EnhancedFilteredTree.<init>(EnhancedFilteredTree.java:48)
	at org.eclipse.mylyn.commons.workbench.AbstractFilteredTree.<init>(AbstractFilteredTree.java:71)
	at org.eclipse.mylyn.internal.tasks.ui.views.TaskListFilteredTree.<init>(TaskListFilteredTree.java:135)
	at org.eclipse.mylyn.internal.tasks.ui.views.TaskListView.createPartControl(TaskListView.java:591)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.createPartControl(CompatibilityPart.java:158)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityView.createPartControl(CompatibilityView.java:155)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.create(CompatibilityPart.java:365)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:987)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:952)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(InjectorImpl.java:141)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:395)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:322)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:202)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:91)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:60)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:42)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributedPartRenderer.createWidget(ContributedPartRenderer.java:132)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:995)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:528)
	at org.eclipse.e4.ui.workbench.renderers.swt.ElementReferenceRenderer.createWidget(ElementReferenceRenderer.java:73)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:995)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.internal.workbench.PartServiceImpl.lambda$0(PartServiceImpl.java:110)
	at org.eclipse.e4.ui.services.internal.events.UIEventHandler.lambda$0(UIEventHandler.java:38)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4803)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.services.internal.events.UIEventHandler.handleEvent(UIEventHandler.java:38)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.ElementContainerImpl.setSelectedElementGen(ElementContainerImpl.java:170)
	at org.eclipse.e4.ui.model.application.ui.impl.ElementContainerImpl.setSelectedElement(ElementContainerImpl.java:188)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:121)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:677)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.lambda$0(LazyStackRenderer.java:83)
	at org.eclipse.e4.ui.services.internal.events.UIEventHandler.lambda$0(UIEventHandler.java:38)
	at org.eclipse.swt.widgets.Synchronizer.syncExec(Synchronizer.java:183)
	at org.eclipse.ui.internal.UISynchronizer.syncExec(UISynchronizer.java:133)
	at org.eclipse.swt.widgets.Display.syncExec(Display.java:4803)
	at org.eclipse.e4.ui.workbench.swt.DisplayUISynchronize.syncExec(DisplayUISynchronize.java:34)
	at org.eclipse.e4.ui.services.internal.events.UIEventHandler.handleEvent(UIEventHandler.java:38)
	at org.eclipse.equinox.internal.event.EventHandlerWrapper.handleEvent(EventHandlerWrapper.java:205)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:203)
	at org.eclipse.equinox.internal.event.EventHandlerTracker.dispatchEvent(EventHandlerTracker.java:1)
	at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)
	at org.eclipse.osgi.framework.eventmgr.ListenerQueue.dispatchEventSynchronous(ListenerQueue.java:151)
	at org.eclipse.equinox.internal.event.EventAdminImpl.dispatchEvent(EventAdminImpl.java:133)
	at org.eclipse.equinox.internal.event.EventAdminImpl.sendEvent(EventAdminImpl.java:75)
	at org.eclipse.equinox.internal.event.EventComponent.sendEvent(EventComponent.java:44)
	at org.eclipse.e4.ui.services.internal.events.EventBroker.send(EventBroker.java:55)
	at org.eclipse.e4.ui.internal.workbench.UIEventPublisher.notifyChanged(UIEventPublisher.java:63)
	at org.eclipse.emf.common.notify.impl.BasicNotifierImpl.eNotify(BasicNotifierImpl.java:424)
	at org.eclipse.e4.ui.model.application.ui.impl.ElementContainerImpl.setSelectedElementGen(ElementContainerImpl.java:170)
	at org.eclipse.e4.ui.model.application.ui.impl.ElementContainerImpl.setSelectedElement(ElementContainerImpl.java:188)
	at org.eclipse.ui.internal.WorkbenchPage.busySetPerspective(WorkbenchPage.java:4040)
	at org.eclipse.ui.internal.WorkbenchPage.lambda$12(WorkbenchPage.java:3977)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.ui.internal.WorkbenchPage.setPerspective(WorkbenchPage.java:3977)
	at org.eclipse.ui.internal.WorkbenchWindow.setup(WorkbenchWindow.java:899)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:987)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(InjectorImpl.java:141)
	at org.eclipse.e4.core.internal.di.InjectorImpl.inject(InjectorImpl.java:97)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.inject(ContextInjectionFactory.java:83)
	at org.eclipse.ui.internal.Workbench.createWorkbenchWindow(Workbench.java:1468)
	at org.eclipse.ui.internal.StandardTrim.createStatusLine(StandardTrim.java:118)
	at org.eclipse.ui.internal.StandardTrim.createWidget(StandardTrim.java:48)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:987)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(InjectorImpl.java:141)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:395)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:336)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:227)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:94)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:60)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:37)
	at org.eclipse.e4.ui.workbench.renderers.swt.ToolControlRenderer.createWidget(ToolControlRenderer.java:129)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:995)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.TrimBarRenderer.processContents(TrimBarRenderer.java:109)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:528)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:680)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1083)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)

!ENTRY org.eclipse.egit.ui 2 0 2023-09-07 10:02:51.363
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\bohda'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-09-07 19:22:00.243 -----------------------------------------------
eclipse.buildId=4.28.0.20230608-1200
java.version=17.0.8
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=uk_UA
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-09-07 19:22:50.659
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-09-07 19:22:50.659
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.mylyn.commons.ui 4 0 2023-09-07 19:22:54.909
!MESSAGE For input string: "or" under radix 16
!STACK 0
java.lang.NumberFormatException: For input string: "or" under radix 16
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at org.eclipse.mylyn.internal.commons.ui.E4ThemeColor.getRGBFromCssString(E4ThemeColor.java:57)
	at org.eclipse.mylyn.commons.ui.GradientColors.getRGBFromTheme(GradientColors.java:211)
	at org.eclipse.mylyn.commons.ui.GradientColors.getBackground(GradientColors.java:190)
	at org.eclipse.mylyn.commons.ui.GradientColors.createBorderColor(GradientColors.java:78)
	at org.eclipse.mylyn.commons.ui.GradientColors.createColors(GradientColors.java:54)
	at org.eclipse.mylyn.commons.ui.GradientColors.<init>(GradientColors.java:50)
	at org.eclipse.mylyn.commons.ui.GradientToolTip.initResources(GradientToolTip.java:49)
	at org.eclipse.mylyn.commons.ui.GradientToolTip.<init>(GradientToolTip.java:44)
	at org.eclipse.mylyn.internal.tasks.ui.views.TaskListToolTip.<init>(TaskListToolTip.java:126)
	at org.eclipse.mylyn.internal.tasks.ui.views.TaskListFilteredTree.createActiveTaskComposite(TaskListFilteredTree.java:423)
	at org.eclipse.mylyn.commons.workbench.AbstractFilteredTree.createFilterControls(AbstractFilteredTree.java:182)
	at org.eclipse.ui.dialogs.FilteredTree.createControl(FilteredTree.java:362)
	at org.eclipse.mylyn.commons.workbench.EnhancedFilteredTree.createControl(EnhancedFilteredTree.java:61)
	at org.eclipse.mylyn.commons.workbench.AbstractFilteredTree.createControl(AbstractFilteredTree.java:92)
	at org.eclipse.ui.dialogs.FilteredTree.init(FilteredTree.java:331)
	at org.eclipse.ui.dialogs.FilteredTree.<init>(FilteredTree.java:289)
	at org.eclipse.mylyn.commons.workbench.EnhancedFilteredTree.<init>(EnhancedFilteredTree.java:48)
	at org.eclipse.mylyn.commons.workbench.AbstractFilteredTree.<init>(AbstractFilteredTree.java:71)
	at org.eclipse.mylyn.internal.tasks.ui.views.TaskListFilteredTree.<init>(TaskListFilteredTree.java:135)
	at org.eclipse.mylyn.internal.tasks.ui.views.TaskListView.createPartControl(TaskListView.java:591)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.createPartControl(CompatibilityPart.java:158)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityView.createPartControl(CompatibilityView.java:155)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.create(CompatibilityPart.java:365)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:987)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:952)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(InjectorImpl.java:141)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:395)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:322)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:202)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:91)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:60)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:42)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributedPartRenderer.createWidget(ContributedPartRenderer.java:132)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:995)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:528)
	at org.eclipse.e4.ui.workbench.renderers.swt.ElementReferenceRenderer.createWidget(ElementReferenceRenderer.java:73)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:995)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.showTab(StackRenderer.java:1344)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:116)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:677)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:116)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:677)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1083)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)

!ENTRY org.eclipse.egit.ui 2 0 2023-09-07 19:22:58.227
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\bohda'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-09-07 21:22:59.534 -----------------------------------------------
eclipse.buildId=4.28.0.20230608-1200
java.version=17.0.8
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=uk_UA
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.core.resources 2 10035 2023-09-07 21:23:08.061
!MESSAGE The workspace exited with unsaved changes in the previous session; refreshing workspace to recover changes.

!ENTRY org.eclipse.jface 2 0 2023-09-07 21:23:11.210
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-09-07 21:23:11.210
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.mylyn.commons.ui 4 0 2023-09-07 21:23:15.298
!MESSAGE For input string: "or" under radix 16
!STACK 0
java.lang.NumberFormatException: For input string: "or" under radix 16
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at org.eclipse.mylyn.internal.commons.ui.E4ThemeColor.getRGBFromCssString(E4ThemeColor.java:57)
	at org.eclipse.mylyn.commons.ui.GradientColors.getRGBFromTheme(GradientColors.java:211)
	at org.eclipse.mylyn.commons.ui.GradientColors.getBackground(GradientColors.java:190)
	at org.eclipse.mylyn.commons.ui.GradientColors.createBorderColor(GradientColors.java:78)
	at org.eclipse.mylyn.commons.ui.GradientColors.createColors(GradientColors.java:54)
	at org.eclipse.mylyn.commons.ui.GradientColors.<init>(GradientColors.java:50)
	at org.eclipse.mylyn.commons.ui.GradientToolTip.initResources(GradientToolTip.java:49)
	at org.eclipse.mylyn.commons.ui.GradientToolTip.<init>(GradientToolTip.java:44)
	at org.eclipse.mylyn.internal.tasks.ui.views.TaskListToolTip.<init>(TaskListToolTip.java:126)
	at org.eclipse.mylyn.internal.tasks.ui.views.TaskListFilteredTree.createActiveTaskComposite(TaskListFilteredTree.java:423)
	at org.eclipse.mylyn.commons.workbench.AbstractFilteredTree.createFilterControls(AbstractFilteredTree.java:182)
	at org.eclipse.ui.dialogs.FilteredTree.createControl(FilteredTree.java:362)
	at org.eclipse.mylyn.commons.workbench.EnhancedFilteredTree.createControl(EnhancedFilteredTree.java:61)
	at org.eclipse.mylyn.commons.workbench.AbstractFilteredTree.createControl(AbstractFilteredTree.java:92)
	at org.eclipse.ui.dialogs.FilteredTree.init(FilteredTree.java:331)
	at org.eclipse.ui.dialogs.FilteredTree.<init>(FilteredTree.java:289)
	at org.eclipse.mylyn.commons.workbench.EnhancedFilteredTree.<init>(EnhancedFilteredTree.java:48)
	at org.eclipse.mylyn.commons.workbench.AbstractFilteredTree.<init>(AbstractFilteredTree.java:71)
	at org.eclipse.mylyn.internal.tasks.ui.views.TaskListFilteredTree.<init>(TaskListFilteredTree.java:135)
	at org.eclipse.mylyn.internal.tasks.ui.views.TaskListView.createPartControl(TaskListView.java:591)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.createPartControl(CompatibilityPart.java:158)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityView.createPartControl(CompatibilityView.java:155)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.create(CompatibilityPart.java:365)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:987)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:952)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(InjectorImpl.java:141)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:395)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:322)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:202)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:91)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:60)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:42)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributedPartRenderer.createWidget(ContributedPartRenderer.java:132)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:995)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:528)
	at org.eclipse.e4.ui.workbench.renderers.swt.ElementReferenceRenderer.createWidget(ElementReferenceRenderer.java:73)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:995)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.showTab(StackRenderer.java:1344)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:116)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:677)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:116)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:677)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1083)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)

!ENTRY org.eclipse.egit.ui 2 0 2023-09-07 21:23:17.018
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\bohda'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2023-09-08 10:54:47.027 -----------------------------------------------
eclipse.buildId=4.28.0.20230608-1200
java.version=17.0.8
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=uk_UA
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2023-09-08 10:54:55.407
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2023-09-08 10:54:55.407
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.jdt.ui.navigate.open.type"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		WorkbenchHandlerServiceHandler("org.eclipse.lsp4e.symbolinworkspace"),
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.mylyn.commons.ui 4 0 2023-09-08 10:54:58.146
!MESSAGE For input string: "or" under radix 16
!STACK 0
java.lang.NumberFormatException: For input string: "or" under radix 16
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at org.eclipse.mylyn.internal.commons.ui.E4ThemeColor.getRGBFromCssString(E4ThemeColor.java:57)
	at org.eclipse.mylyn.commons.ui.GradientColors.getRGBFromTheme(GradientColors.java:211)
	at org.eclipse.mylyn.commons.ui.GradientColors.getBackground(GradientColors.java:190)
	at org.eclipse.mylyn.commons.ui.GradientColors.createBorderColor(GradientColors.java:78)
	at org.eclipse.mylyn.commons.ui.GradientColors.createColors(GradientColors.java:54)
	at org.eclipse.mylyn.commons.ui.GradientColors.<init>(GradientColors.java:50)
	at org.eclipse.mylyn.commons.ui.GradientToolTip.initResources(GradientToolTip.java:49)
	at org.eclipse.mylyn.commons.ui.GradientToolTip.<init>(GradientToolTip.java:44)
	at org.eclipse.mylyn.internal.tasks.ui.views.TaskListToolTip.<init>(TaskListToolTip.java:126)
	at org.eclipse.mylyn.internal.tasks.ui.views.TaskListFilteredTree.createActiveTaskComposite(TaskListFilteredTree.java:423)
	at org.eclipse.mylyn.commons.workbench.AbstractFilteredTree.createFilterControls(AbstractFilteredTree.java:182)
	at org.eclipse.ui.dialogs.FilteredTree.createControl(FilteredTree.java:362)
	at org.eclipse.mylyn.commons.workbench.EnhancedFilteredTree.createControl(EnhancedFilteredTree.java:61)
	at org.eclipse.mylyn.commons.workbench.AbstractFilteredTree.createControl(AbstractFilteredTree.java:92)
	at org.eclipse.ui.dialogs.FilteredTree.init(FilteredTree.java:331)
	at org.eclipse.ui.dialogs.FilteredTree.<init>(FilteredTree.java:289)
	at org.eclipse.mylyn.commons.workbench.EnhancedFilteredTree.<init>(EnhancedFilteredTree.java:48)
	at org.eclipse.mylyn.commons.workbench.AbstractFilteredTree.<init>(AbstractFilteredTree.java:71)
	at org.eclipse.mylyn.internal.tasks.ui.views.TaskListFilteredTree.<init>(TaskListFilteredTree.java:135)
	at org.eclipse.mylyn.internal.tasks.ui.views.TaskListView.createPartControl(TaskListView.java:591)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.createPartControl(CompatibilityPart.java:158)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityView.createPartControl(CompatibilityView.java:155)
	at org.eclipse.ui.internal.e4.compatibility.CompatibilityPart.create(CompatibilityPart.java:365)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:987)
	at org.eclipse.e4.core.internal.di.InjectorImpl.processAnnotated(InjectorImpl.java:952)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalInject(InjectorImpl.java:141)
	at org.eclipse.e4.core.internal.di.InjectorImpl.internalMake(InjectorImpl.java:395)
	at org.eclipse.e4.core.internal.di.InjectorImpl.make(InjectorImpl.java:322)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.make(ContextInjectionFactory.java:202)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.createFromBundle(ReflectionContributionFactory.java:91)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.doCreate(ReflectionContributionFactory.java:60)
	at org.eclipse.e4.ui.internal.workbench.ReflectionContributionFactory.create(ReflectionContributionFactory.java:42)
	at org.eclipse.e4.ui.workbench.renderers.swt.ContributedPartRenderer.createWidget(ContributedPartRenderer.java:132)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:995)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$1.run(PartRenderingEngine.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:528)
	at org.eclipse.e4.ui.workbench.renderers.swt.ElementReferenceRenderer.createWidget(ElementReferenceRenderer.java:73)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createWidget(PartRenderingEngine.java:995)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:659)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.StackRenderer.showTab(StackRenderer.java:1344)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:116)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:677)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveRenderer.processContents(PerspectiveRenderer.java:51)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.showTab(PerspectiveStackRenderer.java:82)
	at org.eclipse.e4.ui.workbench.renderers.swt.LazyStackRenderer.postProcess(LazyStackRenderer.java:116)
	at org.eclipse.e4.ui.workbench.renderers.swt.PerspectiveStackRenderer.postProcess(PerspectiveStackRenderer.java:64)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:677)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.SashRenderer.processContents(SashRenderer.java:150)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.workbench.renderers.swt.SWTPartRenderer.processContents(SWTPartRenderer.java:72)
	at org.eclipse.e4.ui.workbench.renderers.swt.WBWRenderer.processContents(WBWRenderer.java:658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:673)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.safeCreateGui(PartRenderingEngine.java:763)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$2.run(PartRenderingEngine.java:728)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.createGui(PartRenderingEngine.java:712)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1083)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)

!ENTRY org.eclipse.egit.ui 2 0 2023-09-08 10:54:59.116
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\bohda'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:38:02.691
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((*100)/this.quality)(int)(Math.random() * 11);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-09-08 11:38:02.693
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-09-08 11:38:02.693
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:38:02.936
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((*100)/this.quality)(int)(Math.random() * 11);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-09-08 11:38:02.938
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-09-08 11:38:02.939
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:38:04.130
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((*100)/this.quality)(int)(Math.random() * 11);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-09-08 11:38:04.132
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-09-08 11:38:04.133
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:38:08.769
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((*100)/this.quality)(int)(Math.random() * 0);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-09-08 11:38:08.770
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-09-08 11:38:08.770
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:38:08.850
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((*100)/this.quality)(int)(Math.random() * 0);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-09-08 11:38:08.852
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-09-08 11:38:08.852
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:38:09.374
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((*100)/this.quality)(int)(Math.random() * 0.);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-09-08 11:38:09.376
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-09-08 11:38:09.376
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:38:09.497
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((*100)/this.quality)(int)(Math.random() * 0.);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-09-08 11:38:09.497
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-09-08 11:38:09.498
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:38:11.389
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((*100)/this.quality)(int)(Math.random() * 0.0);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-09-08 11:38:11.390
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-09-08 11:38:11.390
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:38:11.458
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((*100)/this.quality)(int)(Math.random() * 0.0);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-09-08 11:38:11.459
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-09-08 11:38:11.460
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:38:12.935
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((*100)/this.quality)(int)(Math.random() * 0.01);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-09-08 11:38:12.935
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-09-08 11:38:12.936
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:38:13.041
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((*100)/this.quality)(int)(Math.random() * 0.01);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-09-08 11:38:13.042
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-09-08 11:38:13.043
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:38:17.248
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((*100)/this.quality)(int)(Math.random() * 0.01);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-09-08 11:38:17.249
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-09-08 11:38:17.249
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:38:17.268
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((*100)/this.quality)(int)(Math.random() * 0.01);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1008)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:804)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:748)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:671)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:663)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-09-08 11:38:17.269
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1008)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:804)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:748)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:671)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:663)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-09-08 11:38:17.270
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1008)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:804)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:748)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:671)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:663)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:38:20.053
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((*100)/this.quality)(int)(Math.random() * 0.01);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-09-08 11:38:20.054
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-09-08 11:38:20.054
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:38:21.110
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((*100)/this.quality)(int)(Math.random() * 0.01);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-09-08 11:38:21.110
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-09-08 11:38:21.110
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:38:21.439
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((*100)/this.quality)(int)(Math.random() * 0.01);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-09-08 11:38:21.439
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-09-08 11:38:21.440
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:38:23.322
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((*100)/this.quality)(int)(Math.random() * 0.01);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:486)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:407)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:366)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:287)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:309)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:243)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:655)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1594)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4865)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4743)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5040)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-09-08 11:38:23.323
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:486)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:407)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:366)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:287)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:309)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:243)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:655)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1594)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4865)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4743)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5040)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-09-08 11:38:23.324
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:486)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:407)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:366)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:287)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:309)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:243)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:655)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1594)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4865)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4743)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5040)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:38:29.908
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((*100)/this.quality)(int)(Math.random() * 0.01);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-09-08 11:38:29.909
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-09-08 11:38:29.909
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:38:30.209
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((*100)/this.quality)(int)(Math.random() * 0.01);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:486)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:407)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:366)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:287)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:309)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:243)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:655)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1594)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4865)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4743)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5040)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-09-08 11:38:30.211
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:486)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:407)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:366)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:287)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:309)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:243)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:655)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1594)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4865)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4743)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5040)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-09-08 11:38:30.212
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:486)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:407)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:366)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:67)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:287)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:474)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:121)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:97)
	at jdk.internal.reflect.GeneratedMethodAccessor44.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:58)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:309)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:243)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:173)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:156)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:488)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:485)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:308)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:580)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:655)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:439)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:96)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:89)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1286)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1065)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1090)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1075)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1117)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1113)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1594)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4865)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:345)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4743)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:5040)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(Native Method)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3658)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1155)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:643)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:550)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:171)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:136)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:402)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:659)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:596)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1467)
	at org.eclipse.equinox.launcher.Main.main(Main.java:1440)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:38:33.137
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((*100)/this.quality)(int)(Math.random() * 0.01);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-09-08 11:38:33.138
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-09-08 11:38:33.139
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:38:33.229
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((*100)/this.quality)(int)(Math.random() * 0.01);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-09-08 11:38:33.230
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-09-08 11:38:33.231
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:38:34.131
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((this.maxDurability*100)/this.quality)(int)(Math.random() * 0.01);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-09-08 11:38:34.132
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-09-08 11:38:34.132
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:38:34.395
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((this.maxDurability*100)/this.quality)(int)(Math.random() * 0.01);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-09-08 11:38:34.395
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-09-08 11:38:34.395
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:52:22.284
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((this.maxDurability*100)/this.quality)(int)(Math.random() * 0.01);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-09-08 11:52:22.285
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-09-08 11:52:22.286
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:52:22.372
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((this.maxDurability*100)/this.quality)(int)(Math.random() * 0.01);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-09-08 11:52:22.373
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-09-08 11:52:22.373
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:52:23.244
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((this.maxDurability*100)/this.quality)(int)(Math.random() * 1.01);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-09-08 11:52:23.245
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-09-08 11:52:23.245
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:52:28.142
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((this.maxDurability*100)/this.quality)(int)(Math.random() * 1.01);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-09-08 11:52:28.143
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-09-08 11:52:28.144
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:52:28.236
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((this.maxDurability*100)/this.quality)(int)(Math.random() * 1.01);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-09-08 11:52:28.237
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-09-08 11:52:28.237
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:52:29.283
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((this.maxDurability*100)/this.quality)(int)(Math.random() * 1.1);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-09-08 11:52:29.284
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-09-08 11:52:29.284
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:52:29.295
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((this.maxDurability*100)/this.quality)(int)(Math.random() * 1.1);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-09-08 11:52:29.296
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-09-08 11:52:29.296
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:189)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:52:31.848
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((this.maxDurability*100)/this.quality)(int)(Math.random() * 1.1);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-09-08 11:52:31.849
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-09-08 11:52:31.849
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:52:48.702
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((this.maxDurability*100)/this.quality)(int)(Math.random() * 1.1);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-09-08 11:52:48.704
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-09-08 11:52:48.704
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:52:48.850
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((this.maxDurability*100)/this.quality)(int)(Math.random() * 1.1);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-09-08 11:52:48.850
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-09-08 11:52:48.851
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:52:48.862
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((this.maxDurability*100)/this.quality)(int)(Math.random() * 1.1);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1008)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:804)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:748)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:671)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:663)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-09-08 11:52:48.864
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1008)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:804)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:748)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:671)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:663)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-09-08 11:52:48.864
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoveredASTNode(JavadocHover.java:1008)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getInfoText(JavadocHover.java:804)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo(JavadocHover.java:748)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.internalGetHoverInfo(JavadocHover.java:671)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavadocHover.getHoverInfo2(JavadocHover.java:663)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:53:08.874
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((this.maxDurability*100)/this.quality)(int)(Math.random() * 1.1);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-09-08 11:53:08.875
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-09-08 11:53:08.875
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:53:13.261
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((this.maxDurability*100)/this.quality)(int)(Math.random() * 1.1);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-09-08 11:53:13.262
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-09-08 11:53:13.264
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:53:13.288
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((this.maxDurability*100)/this.quality)(int)(Math.random() * 1.1);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-09-08 11:53:13.290
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-09-08 11:53:13.290
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:53:14.581
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((this.maxDurability*100)/this.quality)(int)(Math.random() * 1.1);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-09-08 11:53:14.582
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-09-08 11:53:14.582
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:141)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:120)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:53:15.177
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
		
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((this.maxDurability*100)/this.quality)(int)(Math.random() * 1.1);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-09-08 11:53:15.178
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-09-08 11:53:15.178
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:53:29.001
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((this.maxDurability*100)/this.quality)(int)(Math.random() * 1.1);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-09-08 11:53:29.004
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-09-08 11:53:29.004
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:53:29.089
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((this.maxDurability*100)/this.quality)(int)(Math.random() * 1.1);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-09-08 11:53:29.090
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-09-08 11:53:29.090
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:53:33.370
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((this.maxDurability*100)/this.quality)(int)(Math.random() * 1.1);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-09-08 11:53:33.370
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-09-08 11:53:33.371
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:53:36.332
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((this.maxDurability*100)/this.quality)(int)(Math.random() * 1.1);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2023-09-08 11:53:36.335
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2023-09-08 11:53:36.336
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:53:36.930
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }
	    

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((this.maxDurability*100)/this.quality)(int)(Math.random() * 1.1);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 2 2023-09-08 11:53:36.930
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.ui 4 0 2023-09-08 11:53:36.931
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:584)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:201)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:597)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1148)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1325)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:132)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:94)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:91)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:158)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:78)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:207)

!ENTRY org.eclipse.jdt.core 4 4 2023-09-08 11:53:36.937
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
/**
 * 
 */
package CI_306.Shyryi.Lab3;

import java.util.List;
import java.util.ArrayList;

/**
 * 
 */
public class BoatOnOars {
	
	private String name;
	private Boat boat;
	private PairOfOars[] pairOfOars;
	private Sailer[] sailer;
	private List<Person> passengers = new ArrayList<>();

    public BoatOnOars() {
    	System.out.print("\nПуста шлюпка на веслах була створенна");
    }

    public BoatOnOars(String name, Boat boat, PairOfOars[] pairOfOars, Sailer[] sailer, List<Person> passengers) {
        this.name = name;
        this.boat = boat;
        this.pairOfOars = pairOfOars;
        this.sailer = sailer;
        this.passengers = passengers;
    }

    public BoatOnOars(BoatOnOars other) {
        this.name = other.name;
        this.boat = new Boat(other.boat);
        this.pairOfOars = other.pairOfOars.clone();
        this.sailer = other.sailer.clone();
        this.passengers = new ArrayList<>(other.passengers);
    }

    {
        this.name = "Невідомо";
        this.boat = new Boat();
        this.pairOfOars = new PairOfOars[2];
        this.sailer = new Sailer[2];
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Boat getBoat() {
        return boat;
    }

    public void setBoat(Boat boat) {
        this.boat = boat;
    }

    public PairOfOars[] getPairOfOars() {
        return pairOfOars;
    }

    public void setPairOfOars(PairOfOars[] pairOfOars) {
        this.pairOfOars = pairOfOars;
    }

    public Sailer[] getSailer() {
        return sailer;
    }

    public void setSailer(Sailer[] sailer) {
        this.sailer = sailer;
    }

    public List<Person> getPassengers() {
        return passengers;
    }

    public void setPassengers(List<Person> passengers) {
        this.passengers = passengers;
    }
	
	class Boat 
	{
		private Deck deck;
		private Body body;

	    public Boat() {
	    	System.out.print("\nПуста шлюпка була створенна");
	    }

	    public Boat(Deck deck, Body body) {
	        this.deck = deck;
	        this.body = body;
	    }

	    public Boat(Boat other) {
	        this.deck = new Deck(other.deck);
	        this.body = new Body(other.body);
	    }

	    {
	        this.deck = new Deck();
	        this.body = new Body();
	    }

	    public Deck getDeck() {
	        return deck;
	    }

	    public void setDeck(Deck deck) {
	        this.deck = deck;
	    }

	    public Body getBody() {
	        return body;
	    }

	    public void setBody(Body body) {
	        this.body = body;
	    }
		
	}
	
	class Deck
	{
		private Integer sailorsCapacity;
		private Integer passengerCapacity;
		
		 public Deck() {
			 System.out.print("\nПуста палуба була створенна");
	    }

	    public Deck(Integer sailorsCapacity, Integer passengerCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	        this.passengerCapacity = passengerCapacity;
	    }

	    public Deck(Deck other) {
	        this.sailorsCapacity = other.sailorsCapacity;
	        this.passengerCapacity = other.passengerCapacity;
	    }

	    {
	        this.sailorsCapacity = 0;
	        this.passengerCapacity = 0;
	    }

	    public Integer getSailorsCapacity() {
	        return sailorsCapacity;
	    }

	    public void setSailorsCapacity(Integer sailorsCapacity) {
	        this.sailorsCapacity = sailorsCapacity;
	    }

	    public Integer getPassengerCapacity() {
	        return passengerCapacity;
	    }

	    public void setPassengerCapacity(Integer passengerCapacity) {
	        this.passengerCapacity = passengerCapacity;
	    }
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "кількість of sailors='" + sailorsCapacity + '\'' +
	                ", кількість пасажирів='" + passengerCapacity + '\'' +
	                '}';
	    }
	}
	
	class Body
	{
		private String material;
		private Integer durability;
		
		public Body() {
			System.out.print("\nПустий корпус був створений");
	    }

	    public Body(String material, Integer durability) {
	        this.material = material;
	        this.durability = durability;
	    }

	    public Body(Body other) {
	        this.material = other.material;
	        this.durability = other.durability;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 0;
	    }

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }
	    @Override
	    public String toString() {
	        return "Корпус{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                '}';
	    }
	}
	
	class PairOfOars
	{
		private Oar rightOar;
		private Oar leftOar;
		
	    public PairOfOars() {
	    	System.out.print("\nПуста пара весел була створенна");
	    }

	    public PairOfOars(Oar rightOar, Oar leftOar) {
	        this.rightOar = rightOar;
	        this.leftOar = leftOar;
	    }

	    public PairOfOars(PairOfOars other) {
	        this.rightOar = new Oar(other.rightOar);
	        this.leftOar = new Oar(other.leftOar);
	    }

	    {
	        this.rightOar = new Oar();
	        this.leftOar = new Oar();
	    }
	    

	    public Oar getRightOar() {
	        return rightOar;
	    }

	    public void setRightOar(Oar rightOar) {
	        this.rightOar = rightOar;
	    }

	    public Oar getLeftOar() {
	        return leftOar;
	    }

	    public void setLeftOar(Oar leftOar) {
	        this.leftOar = leftOar;
	    }
		
	}
	
	class Oar 
	{
		private String material;
		private Integer durability;
		private Integer maxDurability;
		private Integer quality;
		
		public Oar() {
			System.out.print("\nПусте весло було створене");
	    }

	    public Oar(String material, Integer durability, Integer quality) {
	        this.material = material;
	        this.durability = durability;
	        this.quality = quality;
	    }

	    public Oar(Oar other) {
	        this.material = other.material;
	        this.durability = other.durability;
	        this.quality = other.quality;
	    }

	    {
	        this.material = "Невідомо";
	        this.durability = 1000;
	        this.quality = 30;
	    }
	    
	    public Boolean Rowing()
	    {
	    	if (durability > 0)
	    	{
	    		this.durability -= ((int)(Math.random() * 11)*100)/this.quality;
	    		return true;
	    	}
	    	return false;
	    }
	    
	    public Boolean Repair()
	    {
	    	if (this.maxDurability*this.quality)/100 > this.durability)
	    	{
	    		this.durability = ((this.maxDurability*100)/this.quality)(int)(Math.random() * 1.1);
	    		return true;
	    	}
	    	return false;
	    }
	    

	    public String getMaterial() {
	        return material;
	    }

	    public void setMaterial(String material) {
	        this.material = material;
	    }

	    public Integer getDurability() {
	        return durability;
	    }

	    public void setDurability(Integer durability) {
	        this.durability = durability;
	    }

	    public Integer getQuality() {
	        return quality;
	    }

	    public void setQuality(Integer quality) {
	        this.quality = quality;
	    }
	    
	    @Override
	    public String toString() {
	        return "Весло{" +
	                "матеріал='" + material + '\'' +
	                ", справність='" + durability + '\'' +
	                ", якість=" + quality +
	                '}';
	    }
	}
	
	class Sailer extends Person
	{
		private Integer Stamina;
		private Integer Power;
		private Integer Experience;
		
	    public Sailer() {
	        super();
	        System.out.print("\nПустий, той хто працює веслом, був створений");
	    }

	    public Sailer(String firstname, String lastname, Integer years, Integer Stamina, Integer Power, Integer Experience) {
	        super(firstname, lastname, years);
	        this.Stamina = Stamina;
	        this.Power = Power;
	        this.Experience = Experience;
	    }

	    public Sailer(Sailer other) {
	        super(other);
	        this.Stamina = other.Stamina;
	        this.Power = other.Power;
	        this.Experience = other.Experience;
	    }

	    {
	        this.Stamina = 0;
	        this.Power = 0;
	        this.Experience = 0;
	    }

	    public Integer getStamina() {
	        return Stamina;
	    }

	    public void setStamina(Integer Stamina) {
	        this.Stamina = Stamina;
	    }

	    public Integer getPower() {
	        return Power;
	    }

	    public void setPower(Integer Power) {
	        this.Power = Power;
	    }

	    public Integer getExperience() {
	        return Experience;
	    }

	    public void setExperience(Integer Experience) {
	        this.Experience = Experience;
	    }

	    @Override
	    public String toString() {
	        return "Sailer{" +
	                "ім'я='" + getFirstname() + '\'' +
	                ", прізвище='" + getLastname() + '\'' +
	                ", вік=" + getYears() +
	                ", енергія=" + Stamina +
	                ", потужність=" + Power +
	                ", досвід=" + Experience +
	                '}';
	    }

	}
	
	class Person
	{
		private String firstname;
		private String lastname;
		private Integer years;
		
	    public Person() {
	    	System.out.print("\nПуста людина була створена");
	    }

	    public Person(String firstname, String lastname, Integer years) {
	        this.firstname = firstname;
	        this.lastname = lastname;
	        this.years = years;
	    }

	    public Person(Person other) {
	        this.firstname = other.firstname;
	        this.lastname = other.lastname;
	        this.years = other.years;
	    }

	    {
	        this.firstname = "Невідомо";
	        this.lastname = "Невідомо";
	        this.years = 0;
	    }

	    public String getFirstname() {
	        return firstname;
	    }

	    public void setFirstname(String firstname) {
	        this.firstname = firstname;
	    }

	    public String getLastname() {
	        return lastname;
	    }

	    public void setLastname(String lastname) {
	        this.lastname = lastname;
	    }

	    public Integer getYears() {
	        return years;
	    }

	    public void setYears(Integer years) {
	        this.years = years;
	    }

	    @Override
	    public String toString() {
	        return "Людина{" +
	                "ім'я='" + firstname + '\'' +
	                ", прізвище='" + lastname + '\'' +
	                ", вік=" + years +
	                '}';
	    }
	}
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1287)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2047)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3919)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1953)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1990)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3161)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3079)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2286)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3103)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:213)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3456)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1534)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:344)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1272)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:868)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:294)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:286)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:199)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
